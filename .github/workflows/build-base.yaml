name: Build and Push Base Images
on:
  push:
    branches: [ main ]
    paths:
      - 'Dockerfile.base'
      - 'poetry.lock'
      - 'pyproject.toml'
  workflow_dispatch:
    inputs:
      amd64_tag:
        description: 'AMD64 image tag'
        required: true
        default: 'nutria-testagent-base-amd64'
      arm64_tag:
        description: 'ARM64 image tag'
        required: true
        default: 'nutria-testagent-base-arm64'
      manifest_tag:
        description: 'Multi-Architecture manifest tag'
        required: true
        default: 'nutria-testagent-base'
      dockerhub_repo:
        description: 'Repository name to push images'
        required: true
        default: 'leonhrt/dev-images-hub'

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildxleonhrt/dev-images-hub
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push AMD64 base image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.base
          platforms: linux/amd64
          push: true
          tags: ${{ github.event.inputs.dockerhub_repo }}:${{ github.event.inputs.amd64_tag }}
          cache-from: type=registry,ref=${{ github.event.inputs.dockerhub_repo }}:${{ github.event.inputs.amd64_tag }}-cache
          cache-to: type=registry,ref=${{ github.event.inputs.dockerhub_repo }}:${{ github.event.inputs.amd64_tag }}-cache,mode=max

  build-arm64:
    runs-on: ubuntu-22.04-arm
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push ARM64 base image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.base
          platforms: linux/arm64
          push: true
          tags: ${{ github.event.inputs.dockerhub_repo }}:${{ github.event.inputs.arm64_tag }}
          cache-from: type=registry,ref=${{ github.event.inputs.dockerhub_repo }}:${{ github.event.inputs.arm64_tag }}-cache
          cache-to: type=registry,ref=${{ github.event.inputs.dockerhub_repo }}:${{ github.event.inputs.arm64_tag }}-cache,mode=max

  create-manifest:
    needs: [build-amd64, build-arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Inspect source images
        run: |
          echo "Inspecting AMD64 image..."
          docker manifest inspect ${{ github.event.inputs.dockerhub_repo }}:${{ github.event.inputs.amd64_tag }}
          
          echo "Inspection ARM64 image..."
          docker manifest inspect ${{ github.event.inputs.dockerhub_repo }}:${{ github.event.inputs.arm64_tag }}
      - name: Create Multi-Architecture Manifest
        run: |
          docker buildx imagetools create \
            --tag ${{ github.event.inputs.dockerhub_repo }}:${{ github.event.inputs.manifest_tag }} \
            ${{ github.event.inputs.dockerhub_repo }}:${{ github.event.inputs.amd64_tag }} \
            ${{ github.event.inputs.dockerhub_repo }}:${{ github.event.inputs.arm64_tag }}
      
      - name: Verify new manifest
        run: |
          echo "Verifying new manifest..."
          docker manifest inspect ${{ github.event.inputs.dockerhub_repo }}:${{ github.event.inputs.manifest_tag }}
