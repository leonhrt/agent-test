version: 2.1

orbs:
  docker: circleci/docker@2.2.0

parameters:
  docker-username:
    type: string
    default: ${DOCKER_USERNAME}
  docker-image-name:
    type: string
    default: "leonhrt/dev-images-hub"
  docker-image-tag:
    type: string
    default: "agent-test"  # You can also use ${CIRCLE_SHA1:0:7} for git commit hash

jobs:
  build-and-push-amd64:
    docker:
      - image: cimg/base:2023.03
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    resource_class: medium  # x86 runner
    steps:
      - checkout
      - setup_remote_docker:
          version: default
      - docker/check:
          registry: $DOCKER_REGISTRY
      - run:
          name: Build and push AMD64 image
          command: |
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
            docker build -t << pipeline.parameters.docker-image-name >>:<<pipeline.parameters.docker-image-tag>>-amd64 --platform linux/amd64 .
            docker push << pipeline.parameters.docker-image-name >>:<<pipeline.parameters.docker-image-tag>>-amd64

  build-and-push-arm64:
    docker:
      - image: cimg/base:2023.03
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    resource_class: arm.medium  # ARM64 runner
    steps:
      - checkout
      - setup_remote_docker:
          version: default
      - docker/check:
          registry: $DOCKER_REGISTRY
      - run:
          name: Build and push ARM64 image
          command: |
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
            docker build -t << pipeline.parameters.docker-image-name >>:<<pipeline.parameters.docker-image-tag>>-arm64 --platform linux/arm64/v8 .
            docker push << pipeline.parameters.docker-image-name >>:<<pipeline.parameters.docker-image-tag>>-arm64

  create-manifest:
    docker:
      - image: cimg/base:2023.03
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    resource_class: small
    steps:
      - setup_remote_docker:
          version: default
      - run:
          name: Create and push multiarch manifest
          command: |
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
            
            # Create manifest list
            docker manifest create \
              << pipeline.parameters.docker-image-name >>:<<pipeline.parameters.docker-image-tag>> \
              --amend << pipeline.parameters.docker-image-name >>:<<pipeline.parameters.docker-image-tag>>-amd64 \
              --amend << pipeline.parameters.docker-image-name >>:<<pipeline.parameters.docker-image-tag>>-arm64
            
            # Add architecture-specific annotations
            docker manifest annotate \
              << pipeline.parameters.docker-image-name >>:<<pipeline.parameters.docker-image-tag>> \
              << pipeline.parameters.docker-image-name >>:<<pipeline.parameters.docker-image-tag>>-amd64 \
              --os linux --arch amd64
            
            docker manifest annotate \
              << pipeline.parameters.docker-image-name >>:<<pipeline.parameters.docker-image-tag>> \
              << pipeline.parameters.docker-image-name >>:<<pipeline.parameters.docker-image-tag>>-arm64 \
              --os linux --arch arm64
            
            # Push the manifest
            docker manifest push << pipeline.parameters.docker-image-name >>:<<pipeline.parameters.docker-image-tag>>
            
            # Also create and push a manifest with the git hash or latest tag if applicable
            if [ "${CIRCLE_BRANCH}" = "main" ] || [ "${CIRCLE_BRANCH}" = "master" ]; then
              # Create latest manifest
              docker manifest create \
                << pipeline.parameters.docker-image-name >>:latest \
                --amend << pipeline.parameters.docker-image-name >>:<<pipeline.parameters.docker-image-tag>>-amd64 \
                --amend << pipeline.parameters.docker-image-name >>:<<pipeline.parameters.docker-image-tag>>-arm64
              
              # Add architecture-specific annotations for latest
              docker manifest annotate \
                << pipeline.parameters.docker-image-name >>:latest \
                << pipeline.parameters.docker-image-name >>:<<pipeline.parameters.docker-image-tag>>-amd64 \
                --os linux --arch amd64
              
              docker manifest annotate \
                << pipeline.parameters.docker-image-name >>:latest \
                << pipeline.parameters.docker-image-name >>:<<pipeline.parameters.docker-image-tag>>-arm64 \
                --os linux --arch arm64
              
              # Push latest manifest
              docker manifest push << pipeline.parameters.docker-image-name >>:latest
            fi

workflows:
  multiarch-build:
    jobs:
      - build-and-push-amd64:
          context:
            - dockerhub-credentials
          filters:
            branches:
              only:
                - main
                - master  # Include both main and master for compatibility
      - build-and-push-arm64:
          context:
            - dockerhub-credentials
          filters:
            branches:
              only:
                - main
                - master
      - create-manifest:
          requires:
            - build-and-push-amd64
            - build-and-push-arm64
          context:
            - dockerhub-credentials
          filters:
            branches:
              only:
                - main
                - master
